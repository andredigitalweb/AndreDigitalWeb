const windiTemplateTest = (l) => /(\/|\\|@)windicss-template/.test(l.path);
const windiStylePitcherTest = (l) => /(\/|\\|@)windicss-style-pitcher/.test(l.path);
const postCssLoaderTest = (l) => /(\/|\\|@)postcss-loader/.test(l.path);
const cssLoaderTest = (l) => /(\/|\\|@)css-loader/.test(l.path);
const pitch = function(remainingRequest) {
  const findLoaderIndex = (test) => this.loaders.findIndex((loader) => {
    return test(loader) && !loader.normalExecuted;
  });
  const markLoaderAsExecuted = (test) => {
    let index, loader;
    while ((index = findLoaderIndex(test)) !== -1) {
      loader = this.loaders[index];
      loader.pitchExecuted = true;
      loader.normalExecuted = true;
    }
    return loader;
  };
  markLoaderAsExecuted(windiStylePitcherTest);
  if (!remainingRequest.includes("&type=style")) {
    markLoaderAsExecuted(windiTemplateTest);
    return;
  }
  let newTemplateLoaderIndex = findLoaderIndex(postCssLoaderTest);
  if (newTemplateLoaderIndex === -1)
    newTemplateLoaderIndex = findLoaderIndex(cssLoaderTest);
  if (newTemplateLoaderIndex === -1) {
    markLoaderAsExecuted(windiTemplateTest);
    return;
  }
  const templateLoader = markLoaderAsExecuted(windiTemplateTest);
  if (templateLoader)
    this.loaders.splice(newTemplateLoaderIndex + 1, 0, templateLoader);
};

export { pitch };
