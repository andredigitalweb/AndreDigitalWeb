import { readFileSync } from 'fs';
import { resolve } from 'pathe';
import { l as isWebCompilerTarget, i as isDev, b as DEVTOOLS_POST_PATH } from '../shared/windicss-webpack-plugin.c33fb8ee.mjs';
import 'debug';



// -- Unbuild CommonJS Shims --
import __cjs_url__ from 'url';
import __cjs_path__ from 'path';
import __cjs_mod__ from 'module';
const __filename = __cjs_url__.fileURLToPath(import.meta.url);
const __dirname = __cjs_path__.dirname(__filename);
const require = __cjs_mod__.createRequire(import.meta.url);
const DEVTOOLS_CLIENT_PATH = resolve(__dirname, "../runtime/client.cjs");
function getMockClassesInjector(compiler) {
  const completions = compiler.$windi.getCompletions();
  const comment = "/* Windi CSS mock class names for devtools auto-completion */\n";
  const css = [
    ...completions.color,
    ...completions.static
  ].map((name) => `.${compiler.$windi.processor.e(name)}{}`).join("");
  return `
const style = document.createElement('style')
style.setAttribute('type', 'text/css')
style.innerHTML = ${JSON.stringify(comment + css)}
document.head.prepend(style)
`;
}
async function devtoolsLoader(source) {
  const callback = this.async();
  if (!this._compiler) {
    callback(null, source);
    return;
  }
  this.cacheable(true);
  const { port, host } = await this._compiler.$windi.server.ensureStart();
  if (isWebCompilerTarget(this._compiler.options.target) && isDev()) {
    const clientContent = readFileSync(DEVTOOLS_CLIENT_PATH, "utf-8").replace("__POST_PATH__", `http://${host}:${port}${DEVTOOLS_POST_PATH}`);
    const mockClasses = getMockClassesInjector(this._compiler);
    callback(null, `${clientContent}
${mockClasses}`);
  } else {
    callback(null, "");
  }
}

export { devtoolsLoader as default };
